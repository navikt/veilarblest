/*
 * This file is generated by jOOQ.
 */
package no.nav.fo.veilarblest.domain.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import no.nav.fo.veilarblest.domain.Indexes;
import no.nav.fo.veilarblest.domain.Keys;
import no.nav.fo.veilarblest.domain.Public;
import no.nav.fo.veilarblest.domain.enums.Ressurs;
import no.nav.fo.veilarblest.domain.tables.records.LestRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lest extends TableImpl<LestRecord> {

    private static final long serialVersionUID = 1874656334;

    /**
     * The reference instance of <code>public.lest</code>
     */
    public static final Lest LEST = new Lest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LestRecord> getRecordType() {
        return LestRecord.class;
    }

    /**
     * The column <code>public.lest.id</code>.
     */
    public final TableField<LestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lest_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.lest.eier</code>.
     */
    public final TableField<LestRecord, String> EIER = createField("eier", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.lest.av</code>.
     */
    public final TableField<LestRecord, String> AV = createField("av", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.lest.ressurs</code>.
     */
    public final TableField<LestRecord, Ressurs> RESSURS = createField("ressurs", org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(no.nav.fo.veilarblest.domain.enums.Ressurs.class), this, "");

    /**
     * The column <code>public.lest.tidspunkt</code>.
     */
    public final TableField<LestRecord, LocalDateTime> TIDSPUNKT = createField("tidspunkt", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.lest</code> table reference
     */
    public Lest() {
        this(DSL.name("lest"), null);
    }

    /**
     * Create an aliased <code>public.lest</code> table reference
     */
    public Lest(String alias) {
        this(DSL.name(alias), LEST);
    }

    /**
     * Create an aliased <code>public.lest</code> table reference
     */
    public Lest(Name alias) {
        this(alias, LEST);
    }

    private Lest(Name alias, Table<LestRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lest(Name alias, Table<LestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Lest(Table<O> child, ForeignKey<O, LestRecord> key) {
        super(child, key, LEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LestRecord> getPrimaryKey() {
        return Keys.LEST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LestRecord>> getKeys() {
        return Arrays.<UniqueKey<LestRecord>>asList(Keys.LEST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lest as(String alias) {
        return new Lest(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lest as(Name alias) {
        return new Lest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lest rename(String name) {
        return new Lest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lest rename(Name name) {
        return new Lest(name, null);
    }
}
