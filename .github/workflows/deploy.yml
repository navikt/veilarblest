name: Deploy dev og prod
on:
  push:
    branches:
      - main

concurrency:
  group: deploy_prod
  cancel-in-progress: true

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/${{ github.repository }}/veilarblest
  PRINT_PAYLOAD: true

jobs:
  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Build maven artifacts
        run: mvn -B package
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.IMAGE_TAG }}

  deploy-dev:
    name: Deploy application to dev
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-dev.yaml
          VAR: version=${{ env.IMAGE_TAG }}

  deploy-prod:
    name: Deploy application to prod
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais.yaml
          VAR: version=${{ env.IMAGE_TAG }}

  release-prod:
    name: Create prod release
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ env.IMAGE_TAG }}
          release_name: Release to prod
          prerelease: false
